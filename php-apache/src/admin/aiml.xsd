<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:aiml="http://www.alicebot.org/TR/2001/WD-aiml" targetNamespace="http://www.alicebot.org/TR/2001/WD-aiml" elementFormDefault="qualified">
	<xs:element name="aiml">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:category"/>
				<xs:element ref="aiml:topic"/>
			</xs:choice>
			<xs:attribute name="version" type="xs:string" /> <!--  use="required" -->
			<!--  use="required" -->
		</xs:complexType>
	</xs:element>
	<xs:element name="topic">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="aiml:category"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="category">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:pattern"/>
				<xs:sequence minOccurs="0">
					<xs:element ref="aiml:that"/>
				</xs:sequence>
				<xs:element ref="aiml:template"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="InputPatternType"/>
	<xs:element name="pattern">
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="aiml:bot"/>
					<xs:element ref="aiml:eval"/>
				</xs:choice>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="that">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:bot"/>
				<xs:element ref="aiml:eval"/>
				<xs:element ref="aiml:br"/>
				<xs:element ref="aiml:srai"/>
			</xs:choice>
			<xs:attribute name="index" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="template">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="sentence">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="formal">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="lowercase">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="set">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="think">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="MultiLength">
		<xs:restriction base="xs:string">
			<xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)|[1-9]?(\d+)?\*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Flow" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="aiml:inline"/>
			<xs:element ref="aiml:set"/>
			<xs:element ref="aiml:think"/>
			<xs:element ref="aiml:br"/>
			<xs:element ref="aiml:get"/>
			<xs:element ref="aiml:random"/>
			<xs:element ref="aiml:li"/>
			<xs:element ref="aiml:srai"/>
			<xs:element ref="aiml:star"/>
			<xs:element ref="aiml:person"/>
			<xs:element ref="aiml:person2"/>
			<xs:element ref="aiml:ul"/>
			<xs:element ref="aiml:ol"/>
			<xs:element ref="aiml:p"/>
			<xs:element ref="aiml:bot"/>
			<xs:element ref="aiml:that"/>
			<xs:element ref="aiml:condition"/>
			<xs:element ref="aiml:sr"/>
			<xs:element ref="aiml:oob"/>
			<xs:element ref="aiml:dial"/>
			<xs:element ref="aiml:dialcontact"/>
			<xs:element ref="aiml:learn"/>
			<xs:element ref="aiml:eval"/>
			<xs:element ref="aiml:map"/>
			<xs:element ref="aiml:search"/>
			<xs:element ref="aiml:sms"/>
			<xs:element ref="aiml:recipient"/>
			<xs:element ref="aiml:message"/>
			<xs:element ref="aiml:input"/>
			<xs:element ref="aiml:img"/>
			<xs:element ref="aiml:id"/>
			<xs:element ref="aiml:response"/>
			<xs:element ref="aiml:request"/>
			<xs:element ref="aiml:uppercase"/>
			<xs:element ref="aiml:date"/>
			<xs:element ref="aiml:topicstar"/>
			<xs:element ref="aiml:thatstar"/>
			<xs:element ref="aiml:size"/>
			<xs:element ref="aiml:battery"/>
			<xs:element ref="aiml:em"/>
			<xs:element ref="aiml:sentence"/>
			<xs:element ref="aiml:formal"/>
			<xs:element ref="aiml:lowercase"/>
			<xs:element ref="aiml:version"/>
			<xs:element ref="aiml:table"/>
			<xs:element ref="aiml:wiki"/>
			<xs:element ref="aiml:system"/>
			<xs:element ref="aiml:php"/>
			<xs:element ref="aiml:math"/>
			<xs:element ref="aiml:google"/>
			<xs:element ref="aiml:script"/>
			<xs:element ref="aiml:font"/>
			<xs:element ref="aiml:hr"/>
			<xs:element ref="aiml:area"/>
			<xs:element ref="aiml:base"/>
			<xs:element ref="aiml:col"/>
			<xs:element ref="aiml:link"/>
			<xs:element ref="aiml:meta"/>
			<xs:element ref="aiml:param"/>
			<xs:element ref="aiml:pre"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="param">
		<xs:complexType>
			<xs:attribute name="id" type="xs:ID"/>
			<xs:attribute name="name" use="required"/>
			<xs:attribute name="value"/>
			<xs:attribute name="valuetype" default="data">
				<xs:simpleType>
					<xs:restriction base="xs:token">
						<xs:enumeration value="data"/>
						<xs:enumeration value="ref"/>
						<xs:enumeration value="object"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="type" type="aiml:ContentType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="meta">
		<xs:complexType>
			<xs:attribute name="id" type="xs:ID"/>
			<xs:attribute name="http-equiv"/>
			<xs:attribute name="name"/>
			<xs:attribute name="content" use="required"/>
			<xs:attribute name="scheme"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="link">
		<xs:complexType>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attribute name="charset" type="aiml:Charset"/>
			<xs:attribute name="href" type="aiml:URI"/>
			<xs:attribute name="type" type="aiml:ContentType"/>
			<xs:attribute name="rel" type="aiml:LinkTypes"/>
			<xs:attribute name="rev" type="aiml:LinkTypes"/>
			<xs:attribute name="media" type="aiml:MediaDesc"/>
			<xs:attribute name="target" type="aiml:FrameTarget"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="Charset">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="LinkTypes">
		<xs:restriction base="xs:NMTOKENS"/>
	</xs:simpleType>
	<xs:simpleType name="MediaDesc">
		<xs:restriction base="xs:string">
			<xs:pattern value="[^,]+(,\s*[^,]+)*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="focus">
		<xs:attribute name="accesskey" type="aiml:Character"/>
		<xs:attribute name="tabindex" type="aiml:tabindexNumber"/>
		<xs:attribute name="onfocus" type="aiml:Script"/>
		<xs:attribute name="onblur" type="aiml:Script"/>
	</xs:attributeGroup>
	<xs:element name="area">
		<xs:complexType>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attributeGroup ref="aiml:focus"/>
			<xs:attribute name="shape" type="aiml:Shape" default="rect"/>
			<xs:attribute name="coords" type="aiml:Coords"/>
			<xs:attribute name="href" type="aiml:URI"/>
			<xs:attribute name="nohref">
				<xs:simpleType>
					<xs:restriction base="xs:token">
						<xs:enumeration value="nohref"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="alt" type="aiml:Text" use="required"/>
			<xs:attribute name="target" type="aiml:FrameTarget"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="Script">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="tabindexNumber">
		<xs:restriction base="aiml:Number">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="32767"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Shape">
		<xs:restriction base="xs:token">
			<xs:enumeration value="rect"/>
			<xs:enumeration value="circle"/>
			<xs:enumeration value="poly"/>
			<xs:enumeration value="default"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Coords">
		<xs:restriction base="xs:string">
			<xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)(,\s*[-+]?(\d+|\d+(\.\d+)?%))*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="base">
		<xs:complexType>
			<xs:attribute name="id" type="xs:ID"/>
			<xs:attribute name="href" type="aiml:URI"/>
			<xs:attribute name="target" type="aiml:FrameTarget"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="pre">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:pre.content">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="width" type="aiml:Number"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="pre.content" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="aiml:a"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="hr">
		<xs:complexType>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attribute name="align">
				<xs:simpleType>
					<xs:restriction base="xs:token">
						<xs:enumeration value="left"/>
						<xs:enumeration value="center"/>
						<xs:enumeration value="right"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="noshade">
				<xs:simpleType>
					<xs:restriction base="xs:token">
						<xs:enumeration value="noshade"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="size" type="aiml:Pixels"/>
			<xs:attribute name="width" type="aiml:Length"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="b">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Inline">
					<xs:attributeGroup ref="aiml:attrs"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ol">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:li" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="Number">
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:pattern value="[0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="attrs">
		<xs:attributeGroup ref="aiml:coreattrs"/>
	</xs:attributeGroup>
	<xs:simpleType name="StyleSheet">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:attributeGroup name="coreattrs">
		<xs:attribute name="id" type="xs:ID"/>
		<xs:attribute name="class" type="xs:NMTOKENS"/>
		<xs:attribute name="style" type="aiml:StyleSheet"/>
		<xs:attribute name="title" type="aiml:Text"/>
	</xs:attributeGroup>
	<xs:simpleType name="Character">
		<xs:restriction base="xs:string">
			<xs:length value="1" fixed="true"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Length">
		<xs:restriction base="xs:string">
			<xs:pattern value="[-+]?(\d+|\d+(\.\d+)?%)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Pixels">
		<xs:restriction base="xs:nonNegativeInteger"/>
	</xs:simpleType>
	<xs:simpleType name="Text">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="Color">
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Za-z]+|#[0-9A-Fa-f]{3}|#[0-9A-Fa-f]{6}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ImgAlign">
		<xs:restriction base="xs:token">
			<xs:enumeration value="top"/>
			<xs:enumeration value="middle"/>
			<xs:enumeration value="bottom"/>
			<xs:enumeration value="left"/>
			<xs:enumeration value="right"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="font">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Inline">
					<xs:attribute name="size"/>
					<xs:attribute name="color" type="aiml:Color"/>
					<xs:attribute name="face"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="Inline" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="aiml:inline"/>
		</xs:choice>
	</xs:complexType>
	<xs:group name="inline">
		<xs:choice>
			<xs:element ref="aiml:a"/>
			<xs:element ref="aiml:b"/>
		</xs:choice>
	</xs:group>
	<xs:simpleType name="TFrame">
		<xs:restriction base="xs:token">
			<xs:enumeration value="void"/>
			<xs:enumeration value="above"/>
			<xs:enumeration value="below"/>
			<xs:enumeration value="hsides"/>
			<xs:enumeration value="lhs"/>
			<xs:enumeration value="rhs"/>
			<xs:enumeration value="vsides"/>
			<xs:enumeration value="box"/>
			<xs:enumeration value="border"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TRules">
		<xs:restriction base="xs:token">
			<xs:enumeration value="none"/>
			<xs:enumeration value="groups"/>
			<xs:enumeration value="rows"/>
			<xs:enumeration value="cols"/>
			<xs:enumeration value="all"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TAlign">
		<xs:restriction base="xs:token">
			<xs:enumeration value="left"/>
			<xs:enumeration value="center"/>
			<xs:enumeration value="right"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="cellhalign">
		<xs:attribute name="align">
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:enumeration value="left"/>
					<xs:enumeration value="center"/>
					<xs:enumeration value="right"/>
					<xs:enumeration value="justify"/>
					<xs:enumeration value="char"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="char" type="aiml:Character"/>
		<xs:attribute name="charoff" type="aiml:Length"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="cellvalign">
		<xs:attribute name="valign">
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:enumeration value="top"/>
					<xs:enumeration value="middle"/>
					<xs:enumeration value="bottom"/>
					<xs:enumeration value="baseline"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:element name="table">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:caption" minOccurs="0"/>
				<xs:choice>
					<xs:element ref="aiml:col" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element ref="aiml:colgroup" minOccurs="0" maxOccurs="unbounded"/>
				</xs:choice>
				<xs:element ref="aiml:thead" minOccurs="0"/>
				<xs:element ref="aiml:tfoot" minOccurs="0"/>
				<xs:choice>
					<xs:element ref="aiml:tbody" maxOccurs="unbounded"/>
					<xs:element ref="aiml:tr" maxOccurs="unbounded"/>
				</xs:choice>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attribute name="summary" type="aiml:Text"/>
			<xs:attribute name="width" type="aiml:Length"/>
			<xs:attribute name="border" type="aiml:Pixels"/>
			<xs:attribute name="frame" type="aiml:TFrame"/>
			<xs:attribute name="rules" type="aiml:TRules"/>
			<xs:attribute name="cellspacing" type="aiml:Length"/>
			<xs:attribute name="cellpadding" type="aiml:Length"/>
			<xs:attribute name="align" type="aiml:TAlign"/>
			<xs:attribute name="bgcolor" type="aiml:Color"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="CAlign">
		<xs:restriction base="xs:token">
			<xs:enumeration value="top"/>
			<xs:enumeration value="bottom"/>
			<xs:enumeration value="left"/>
			<xs:enumeration value="right"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="caption">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Inline">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="align" type="aiml:CAlign"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="thead">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:tr" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="tfoot">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:tr" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="tbody">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:tr" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="colgroup">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="aiml:col" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attribute name="span" type="aiml:Number" default="1"/>
			<xs:attribute name="width" type="aiml:MultiLength"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="col">
		<xs:complexType>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attribute name="span" type="aiml:Number" default="1"/>
			<xs:attribute name="width" type="aiml:MultiLength"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="tr">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="aiml:th"/>
				<xs:element ref="aiml:td"/>
			</xs:choice>
			<xs:attributeGroup ref="aiml:attrs"/>
			<xs:attributeGroup ref="aiml:cellhalign"/>
			<xs:attributeGroup ref="aiml:cellvalign"/>
			<xs:attribute name="bgcolor" type="aiml:Color"/>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="Scope">
		<xs:annotation>
			<xs:documentation>
      Scope is simpler than headers attribute for common tables
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="row"/>
			<xs:enumeration value="col"/>
			<xs:enumeration value="rowgroup"/>
			<xs:enumeration value="colgroup"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="th">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="abbr" type="aiml:Text"/>
					<xs:attribute name="axis"/>
					<xs:attribute name="headers" type="xs:IDREFS"/>
					<xs:attribute name="rowspan" type="aiml:Number" default="1"/>
					<xs:attribute name="colspan" type="aiml:Number" default="1"/>
					<xs:attributeGroup ref="aiml:cellhalign"/>
					<xs:attributeGroup ref="aiml:cellvalign"/>
					<xs:attribute name="nowrap">
						<xs:simpleType>
							<xs:restriction base="xs:token">
								<xs:enumeration value="nowrap"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="bgcolor" type="aiml:Color"/>
					<xs:attribute name="width" type="aiml:Length"/>
					<xs:attribute name="height" type="aiml:Length"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="td">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="abbr" type="aiml:Text"/>
					<xs:attribute name="axis"/>
					<xs:attribute name="headers" type="xs:IDREFS"/>
					<xs:attribute name="scope" type="aiml:Scope"/>
					<xs:attribute name="rowspan" type="aiml:Number" default="1"/>
					<xs:attribute name="colspan" type="aiml:Number" default="1"/>
					<xs:attributeGroup ref="aiml:cellhalign"/>
					<xs:attributeGroup ref="aiml:cellvalign"/>
					<xs:attribute name="nowrap">
						<xs:simpleType>
							<xs:restriction base="xs:token">
								<xs:enumeration value="nowrap"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="bgcolor" type="aiml:Color"/>
					<xs:attribute name="width" type="aiml:Length"/>
					<xs:attribute name="height" type="aiml:Length"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="wiki">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="php">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="google">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="math">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="system">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="br">
		<xs:complexType/>
	</xs:element>
	<xs:element name="get">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string"/>
			<xs:attribute name="bot" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="random">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="aiml:li"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="li">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="name" type="xs:string"/>
					<xs:attribute name="value" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="srai">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="star">
		<xs:complexType>
			<xs:attribute name="index" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="a">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:a.content">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="href" type="aiml:URI"/>
					<xs:attribute name="target" type="aiml:FrameTarget"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="FrameTarget">
		<xs:annotation>
			<xs:documentation>
      render in this frame
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKEN">
			<xs:pattern value="_(blank|self|parent|top)|[A-Za-z]\c*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="URI">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:complexType name="a.content" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="aiml:special"/>
			<xs:group ref="aiml:misc.inline"/>
		</xs:choice>
	</xs:complexType>
	<xs:group name="special">
		<xs:choice>
			<xs:element ref="aiml:img"/>
		</xs:choice>
	</xs:group>
	<xs:group name="misc.inline">
		<xs:choice>
			<xs:element ref="aiml:script"/>
		</xs:choice>
	</xs:group>
	<xs:group name="misc">
		<xs:choice>
			<xs:group ref="aiml:misc.inline"/>
		</xs:choice>
	</xs:group>
	<xs:element name="script">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attribute name="index" type="xs:string"/>
					<xs:attribute name="id" type="xs:ID"/>
					<xs:attribute name="type" type="aiml:ContentType"/>
					<xs:attribute name="src" type="aiml:URI"/>
					<xs:attribute name="language"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="ContentType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="person">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attribute name="index" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="person2">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attribute name="index" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="ul">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="aiml:li"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="p" type="xs:string"/>
	<xs:element name="bot">
		<xs:complexType>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="condition">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
					<xs:attribute name="name" type="xs:string"/>
					<xs:attribute name="value" type="xs:string"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="sr">
		<xs:complexType/>
	</xs:element>
	<xs:element name="oob">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:dial"/>
				<xs:element ref="aiml:dialcontact"/>
				<xs:element ref="aiml:star"/>
				<xs:element ref="aiml:map"/>
				<xs:element ref="aiml:search"/>
				<xs:element ref="aiml:sms"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="dial">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:srai"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="dialcontact">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:star"/>
				<xs:element ref="aiml:get"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="learn">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:category"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="eval">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow">
					<xs:attributeGroup ref="aiml:attrs"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="thatstar">
		<xs:complexType>
			<xs:attribute name="index" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="map">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:star"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="search">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:star"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="sms">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:recipient"/>
				<xs:element ref="aiml:srai"/>
				<xs:element ref="aiml:message"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="recipient">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:srai"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="message">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="aiml:star"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="input">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="index" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="img">
		<xs:complexType>
			<xs:attribute name="src" type="xs:string" use="required"/>
			<xs:attribute name="alt" type="xs:string"/>
			<xs:attribute name="title" type="xs:string"/>
			<xs:attribute name="width" type="xs:string"/>
			<xs:attribute name="height" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="id">
		<xs:complexType/>
	</xs:element>
	<xs:element name="response">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="index" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="request">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="index" type="xs:string"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="uppercase">
		<xs:complexType mixed="true">
			<xs:complexContent mixed="true">
				<xs:extension base="aiml:Flow"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="version">
		<xs:complexType/>
	</xs:element>
	<xs:element name="date">
		<xs:complexType>
			<xs:attribute name="format" type="xs:string"/>
			<xs:attribute name="locale" type="xs:string"/>
			<xs:attribute name="timezone" type="xs:string"/>
			<xs:attribute name="timestamp" type="xs:long"/>
			<xs:attribute name="offset">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[+|-][0-9]+ [sec|secs|second|seconds|min|minute|minutes|hr|hour|hours|day|days|week|weeks|fortnight|fortnights|month|months|year|years]"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="topicstar">
		<xs:annotation>
			<xs:documentation>ATTLIST date format CDATA #REQUIRED</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="index" type="xs:string"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="size">
		<xs:complexType/>
	</xs:element>
	<xs:element name="battery">
		<xs:complexType/>
	</xs:element>
	<xs:element name="em" type="xs:string"/>
</xs:schema>
